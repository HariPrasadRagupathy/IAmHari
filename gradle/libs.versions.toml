[versions]
kotlin = "2.1.0"
agp = "8.5.2"
compose-multiplatform = "1.7.0"

# Android versions
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.10.1"
androidx-core-ktx = "1.15.0"
androidx-lifecycle = "2.8.4"

# Navigation
androidx-navigation = "2.8.0-alpha10"

# Compose versions
compose-material2 = "1.5.10"    # Material2 (Jetpack Compose)
compose-material3 = "1.7.0"     # Material3 (Jetpack Compose Multiplatform)


# Serialization
kotlinx-serialization = "1.7.3"

# Other libraries
crisban-material3-window = "0.5.0"
kotlinx-coroutines = "1.9.0"
ktor = "3.0.2"
logback = "1.5.12"
junit = "4.13.2"
androidx-test-junit = "1.2.1"
androidx-espresso-core = "3.6.1"
navigationRuntimeKtx = "2.8.8"

# ---------------------------------

[libraries]
# Kotlin
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

# AndroidX Core & Lifecycle (needed for Compose integrations)
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# Navigation
androidx-navigation-compose = { group ="org.jetbrains.androidx.navigation" , name = "navigation-compose", version.ref = "androidx-navigation"}


# Compose - Material 2 (for WASM compatibility)
compose-jetpack-material2 = { module = "androidx.compose.material:material", version.ref = "compose-material2" }

# Compose Multiplatform - Material 3 (for Android, iOS, Desktop, WASM)
compose-multiplatform-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose-material3" }
#compose-material3-windowsize = { group = "org.jetbrains.compose.material3", name ="material3-window-size-class", version.ref = "compose-material3" }
compose-crisban-material3-windowsize = { group = "dev.chrisbanes.material3", name ="material3-window-size-class-multiplatform", version.ref = "crisban-material3-window" }



#Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }


# Coroutines
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }

# Logging
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Ktor
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }

# Testing
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-navigation-runtime-ktx = { group = "androidx.navigation", name = "navigation-runtime-ktx", version.ref = "navigationRuntimeKtx" }

# --------------------------------

[plugins]
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }